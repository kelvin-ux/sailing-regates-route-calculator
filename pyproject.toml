[tool.poetry]
name = "ParkngowyAI"
version = "0.0.1"
description = "Backend for Parkingowy app"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = { extras = ["standard"], version = "0.115.6" }
sqlalchemy = { extras = ["asyncio"], version = "2.0.36" }
aiosqlite = "0.20.0"
pydantic-settings = "^2.4.0"
asyncpg = "^0.30.0"
psycopg2 = "^2.9.9"
uvicorn = "^0.30.6"
gunicorn = "^23.0.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pre-commit = "^4.0.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.3"
flake8 = "^7.1.1"
docstr-coverage = "^2.3.2"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
coverage = "^7.6.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests", "app/tests"]
python_files = ["test_*.py", "*_test.py", "test*.py"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "-x"  # Stop po pierwszym błędzie
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

# Suppress warnings
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PytestDeprecationWarning"
]
